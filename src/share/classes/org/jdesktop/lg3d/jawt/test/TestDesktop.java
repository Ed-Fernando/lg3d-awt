/**
 * Project Looking Glass
 *
 * $RCSfile: TestDesktop.java,v $
 *
 * Copyright (c) 2004, Sun Microsystems, Inc., All Rights Reserved
 *
 * Redistributions in source code form must reproduce the above
 * copyright and this condition.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 *
 * $Revision: 1.2 $
 * $Date: 2006-12-14 00:33:37 $
 * $State: Exp $
 */

package org.jdesktop.lg3d.jawt.test;

import java.awt.AWTEvent;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.lg3d.jawt.JawtToolkit;
import org.jdesktop.lg3d.jawt.embedded.JawtEmbeddedToolkit;

/**
 *
 * @author  kk
 */
public class TestDesktop extends javax.swing.JFrame {
    
    private static Logger logger = Logger.getLogger("org.jdesktop.lg3d.jawt.test");
    private boolean tkInit = false;

    private static String demoDir =
	(new File(System.getProperty("java.home"))).getParent() + "/demo/jfc/";

    private static String demoJars[] = {
	"SwingSet2/SwingSet2.jar",
	"Java2D/Java2Demo.jar",
	"FileChooserDemo/FileChooserDemo.jar",
	"Font2DTest/Font2DTest.jar",
	"Metalworks/Metalworks.jar",
	"Notepad/Notepad.jar",
	"SampleTree/SampleTree.jar",
	"Stylepad/Stylepad.jar",
    };

    public static void run() {
	TestDesktop td = new TestDesktop();

	td.setVisible(true);
	td.launchApplicationLocal(demoJars[0]);
    }

    /** Creates new form TestDesktop */
    public TestDesktop() {
	logger.setLevel(Level.INFO);

        initComponents();

	jJarFileList.setEditable(true);
	for (String s: demoJars)
	    jJarFileList.addItem(s);

	Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
	// d.setSize(d.getWidth()/2+100, d.getHeight()/2+200);
	// d.setSize(d.getWidth(), d.getHeight());
	d.setSize(800, 800);
	setSize(d);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jDesktopPane = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jRunLocalButton = new javax.swing.JButton();
        jJarFileList = new javax.swing.JComboBox();
        jRunRemoteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Java Embedded AWT");
        setName("Java-Embedded-AWT");
        setForeground(new java.awt.Color(51, 51, 51));
        jDesktopPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Jar File :");

        jRunLocalButton.setText("Run Local");
        jRunLocalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRunLocalButtonActionPerformed(evt);
            }
        });

        jJarFileList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jJarFileListActionPerformed(evt);
            }
        });

        jRunRemoteButton.setText("Run Remote");
        jRunRemoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRunRemoteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jJarFileList, 0, 103, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRunLocalButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRunRemoteButton)
                .addContainerGap())
            .addComponent(jDesktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRunRemoteButton)
                    .addComponent(jRunLocalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jJarFileList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRunRemoteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRunRemoteButtonActionPerformed
// TODO add your handling code here:
	logger.info("Not yet implemented...");
    }//GEN-LAST:event_jRunRemoteButtonActionPerformed

    private void jJarFileListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jJarFileListActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jJarFileListActionPerformed

    private void jRunLocalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRunLocalButtonActionPerformed
	launchApplicationLocal((String)jJarFileList.getSelectedItem());
    }//GEN-LAST:event_jRunLocalButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TestDesktop.run();
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane;
    private javax.swing.JComboBox jJarFileList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jRunLocalButton;
    private javax.swing.JButton jRunRemoteButton;
    // End of variables declaration//GEN-END:variables

    public void setVisible(boolean visible) {
	super.setVisible(visible);

	if (visible && !tkInit) {
	    Toolkit tk = Toolkit.getDefaultToolkit();

	    if (tk instanceof JawtToolkit) {
		JawtEmbeddedToolkit etk = ((JawtToolkit)tk).getDefaultEmbeddedToolkit();
		if (etk instanceof TestEmbeddedToolkit) {
		    TestEmbeddedToolkit tetk = (TestEmbeddedToolkit)etk;

		    if (tetk.getDesktopPane() == null) {
			tetk.setDesktopPane(jDesktopPane);
			logger.info("Setting Desktop Pane [" + jDesktopPane.getSize() + "] for TestEmbeddedToolkit");
		    }
		}
	    }
            tkInit = true;
	}
    }

    void launchApplicationLocal(String demoFile) {
	JarClassLoader.run("file://" + demoDir + demoFile);
    }

    public void processEvent(AWTEvent e) {
	logger.info("processEvent : " + e.getClass().getName() +
	    "[" + e.paramString() + "] => " + e.getSource().getClass().getName());
	super.processEvent(e);
    }
}
